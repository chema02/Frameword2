// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(PlaceMyBetContext))]
    [Migration("20201104171639_m2")]
    partial class m2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebApplication1.Models.Apuesta", b =>
                {
                    b.Property<int>("ApuestaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("Cuota")
                        .HasColumnType("float");

                    b.Property<int>("Dinero_Apostado")
                        .HasColumnType("int");

                    b.Property<int>("MercadoId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ApuestaId");

                    b.HasIndex("MercadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Apuestas");

                    b.HasData(
                        new
                        {
                            ApuestaId = 1,
                            Cuota = 1f,
                            Dinero_Apostado = 1000,
                            MercadoId = 1,
                            Tipo = "over",
                            UsuarioId = 1
                        },
                        new
                        {
                            ApuestaId = 2,
                            Cuota = 1.5f,
                            Dinero_Apostado = 555,
                            MercadoId = 2,
                            Tipo = "under",
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Cuenta", b =>
                {
                    b.Property<int>("CuentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreBanco")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("NumeroCuenta")
                        .HasColumnType("int");

                    b.Property<int>("Saldo")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("CuentaId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Cuentas");

                    b.HasData(
                        new
                        {
                            CuentaId = 1,
                            NombreBanco = "bancojones",
                            NumeroCuenta = 1234567890,
                            Saldo = 1000,
                            UsuarioId = 1
                        },
                        new
                        {
                            CuentaId = 2,
                            NombreBanco = "bancodelparke",
                            NumeroCuenta = 554466112,
                            Saldo = 5000,
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Evento", b =>
                {
                    b.Property<int>("EventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Equipolocal")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Equipovisitante")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("EventoId");

                    b.ToTable("Eventos");

                    b.HasData(
                        new
                        {
                            EventoId = 1,
                            Equipolocal = "catarrocha",
                            Equipovisitante = "masanasa"
                        },
                        new
                        {
                            EventoId = 2,
                            Equipolocal = "ceuta",
                            Equipovisitante = "melilla"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Mercado", b =>
                {
                    b.Property<int>("MercadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("Cuota_Over")
                        .HasColumnType("float");

                    b.Property<float>("Cuota_Under")
                        .HasColumnType("float");

                    b.Property<int>("Dinero_Over")
                        .HasColumnType("int");

                    b.Property<int>("Dinero_Under")
                        .HasColumnType("int");

                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<float>("Over_Under")
                        .HasColumnType("float");

                    b.HasKey("MercadoId");

                    b.HasIndex("EventoId");

                    b.ToTable("Mercados");

                    b.HasData(
                        new
                        {
                            MercadoId = 1,
                            Cuota_Over = 2.5f,
                            Cuota_Under = 3.5f,
                            Dinero_Over = 1000,
                            Dinero_Under = 2000,
                            EventoId = 1,
                            Over_Under = 1.5f
                        },
                        new
                        {
                            MercadoId = 2,
                            Cuota_Over = 1.5f,
                            Cuota_Under = 2.5f,
                            Dinero_Over = 5000,
                            Dinero_Under = 10000,
                            EventoId = 2,
                            Over_Under = 2.5f
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            Apellido = "sinmiedo",
                            Edad = 44,
                            Email = "jose@es",
                            Nombre = "juan"
                        },
                        new
                        {
                            UsuarioId = 2,
                            Apellido = "algrande",
                            Edad = 55,
                            Email = "juan@melones",
                            Nombre = "pepico"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Apuesta", b =>
                {
                    b.HasOne("WebApplication1.Models.Mercado", "Mercados")
                        .WithMany("Apuestas")
                        .HasForeignKey("MercadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Usuario", "Usuarios")
                        .WithMany("Apuestas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.Cuenta", b =>
                {
                    b.HasOne("WebApplication1.Models.Usuario", "Usuarios")
                        .WithOne("Cuentas")
                        .HasForeignKey("WebApplication1.Models.Cuenta", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.Mercado", b =>
                {
                    b.HasOne("WebApplication1.Models.Evento", "Eventos")
                        .WithMany("Mercados")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
